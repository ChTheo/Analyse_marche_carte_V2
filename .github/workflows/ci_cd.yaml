name: CI/CD Pipeline

on:
  push:
    branches:      
      - main
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurer Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3. Installer les dépendances
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      # 4. Créer le fichier .env avec les secrets
      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

      # 5. Lancer les tests unitaires
      - name: Run unit tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/scripts
          pytest -v tests/test_manage_data.py tests/test_scryfall_api.py

      # 6. Connexion à Dockerhub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # 7. Build et push sur dockerhub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/airflow-docker:latest

      # 8. Déployer sur la VM de airflow
      - name: Deploy to remote VM
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_SSH_PORT }}
          script: |
            cd /home/theochampeil/conteneur-m2/Analyse_marche_carte_V2/
            git pull origin main
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/airflow-docker:latest
            sudo docker stop airflow-docker || true
            sudo docker run -d --name airflow-docker -p 80:80 ${{ secrets.DOCKER_USERNAME }}/airflow-docker:latest
